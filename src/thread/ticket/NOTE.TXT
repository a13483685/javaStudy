使用Runnable 和 Thread的优缺点：
1 使用实现Runnable接口，由于java的单继承性，还可以另外再继承一个类
2 继承至Thread类的话有些资源共享的变量要设置成static  static的生命周期太长了

线程的生命周期
要想实现多线程，必须在主线程中创建新的线程对象。Java语言使用Thread类及其子类的对象来表示线程，在它的一个完整的生命周期中通常要经历如下的五种状态：
新建： 当一个Thread类或其子类的对象被声明并创建时，新生的线程对象处于新建状态
就绪：处于新建状态的线程被start()后，将进入线程队列等待CPU时间片，此时它已具备了运行的条件
运行：当就绪的线程被调度并获得处理器资源时,便进入运行状态， run()方法定义了线程的操作和功能，yield（）使得线程进入就绪状态，就绪和运行时可逆的
阻塞：在某种特殊情况下，被人为挂起或执行输入输出操作时，让出 CPU 并临时中止自己的执行，进入阻塞状态 sleep（） wait() join() suspend(过时了)  或者等待同步锁
死亡：线程完成了它的全部工作或线程被提前强制性地中止，出现错误 或者exception stop() 不过这个方法过时了

新建就是new出来的对象
就绪：调用start方法获得了cpu的执行权之后就是运行状态
